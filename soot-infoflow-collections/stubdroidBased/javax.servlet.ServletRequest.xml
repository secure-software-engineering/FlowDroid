<?xml version="1.0" encoding="UTF-8"?>
<summary fileFormatVersion="101">
	<methods>
		<method id="void setAttribute(java.lang.String,java.lang.Object)">
			<constraints>
				<key sourceSinkType="Parameter" ParameterIndex="0" />
			</constraints>
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Parameter" ParameterIndex="1" />
					<to sourceSinkType="Field"
						  AccessPath="[javax.servlet.ServletRequest: java.lang.Object[] attributes]"
						  AccessPathTypes="[java.lang.Object[]]" constrained="true" />
				</flow>
			</flows>
			<clears>
				<clear sourceSinkType="Field"
					   AccessPath="[[javax.servlet.ServletRequest: java.lang.Object[] attributes]"
					   AccessPathTypes="[java.lang.Object[]]"
					   constrained="true" />
			</clears>
		</method>
		<method id="java.lang.Object getAttribute(java.lang.String)">
			<constraints>
				<key sourceSinkType="Parameter" ParameterIndex="0" />
			</constraints>
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						  AccessPath="[javax.servlet.ServletRequest: java.lang.Object[] attributes]"
						  AccessPathTypes="[java.lang.Object[]]" constrained="true" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="void removeAttribute(java.lang.String)">
			<constraints>
				<key sourceSinkType="Parameter" ParameterIndex="0" />
			</constraints>
			<clears>
				<clear sourceSinkType="Field"
					   AccessPath="[[javax.servlet.ServletRequest: java.lang.Object[] attributes]"
					   AccessPathTypes="[java.lang.Object[]]"
					   constrained="true" />
			</clears>
		</method>
		<method id="java.util.Enumeration getAttributeNames()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						  AccessPath="[javax.servlet.ServletRequest: java.lang.String[] attributeNames]"
						  AccessPathTypes="[java.lang.String[]]" />
					<to sourceSinkType="Return"
						AccessPath="[java.util.Enumeration: java.util.Collection innerCollection,java.util.Collection: java.lang.Object[] innerArray]"
						AccessPathTypes="[java.util.Collection,java.lang.Object[]]" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.String getCharacterEncoding()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						AccessPath="[javax.servlet.ServletRequest: java.lang.String characterEncoding]"
						AccessPathTypes="[java.lang.String]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.String getContentType()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						AccessPath="[javax.servlet.ServletRequest: java.lang.String contentType]"
						AccessPathTypes="[java.lang.String]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="javax.servlet.ServletInputStream getInputStream()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						AccessPath="[javax.servlet.ServletRequest: byte[] data]"
						AccessPathTypes="[byte[]]" />
					<to sourceSinkType="Return"
						AccessPath="[java.io.InputStream: byte[] innerArray]"
						AccessPathTypes="[byte[]]" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.String getParameter(java.lang.String)">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						AccessPath="[javax.servlet.ServletRequest: java.lang.String[] parameterValues]"
						AccessPathTypes="[java.lang.String[]]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.util.Map getParameterMap()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						AccessPath="[javax.servlet.ServletRequest: java.lang.String[] parameterNames]"
						AccessPathTypes="[java.lang.String[]]" />
					<to sourceSinkType="Return"
						AccessPath="[java.util.Map: java.lang.Object[] keys]"
						AccessPathTypes="[java.lang.Object[]]" />
				</flow>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						AccessPath="[javax.servlet.ServletRequest: java.lang.String[] parameterValues]"
						AccessPathTypes="[java.lang.String[]]" />
					<to sourceSinkType="Return"
						AccessPath="[java.util.Map: java.lang.Object[] values]"
						AccessPathTypes="[java.lang.Object[]]" />
				</flow>
			</flows>
		</method>
		<method id="java.util.Enumeration getParameterNames()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						AccessPath="[javax.servlet.ServletRequest: java.lang.String[] parameterValues]"
						AccessPathTypes="[java.lang.String[]]" />
					<to sourceSinkType="Return"
						AccessPath="[java.util.Enumeration: java.util.Collection innerCollection,java.util.Collection: java.lang.Object[] innerArray]"
						AccessPathTypes="[java.util.Collection,java.lang.Object[]]" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.String[] getParameterValues(java.lang.String)">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						AccessPath="[javax.servlet.ServletRequest: java.lang.String[] parameterValues]"
						AccessPathTypes="[java.lang.String[]]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.String getProtocol()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						AccessPath="[javax.servlet.ServletRequest: java.lang.String protocol]"
						AccessPathTypes="[java.lang.String]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.io.BufferedReader getReader()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						AccessPath="[javax.servlet.ServletRequest: byte[] data]"
						AccessPathTypes="[byte[]]" />
					<to sourceSinkType="Return"
						AccessPath="[java.io.BufferedReader: java.io.Reader innerReader]"
						AccessPathTypes="[java.io.Reader]" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.String getRealPath()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						AccessPath="[javax.servlet.ServletRequest: java.lang.String path]"
						AccessPathTypes="[java.lang.String]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.String getRemoteAddr()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						AccessPath="[javax.servlet.ServletRequest: java.lang.String remoteAddr]"
						AccessPathTypes="[java.lang.String]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.String getRemoteHost()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						AccessPath="[javax.servlet.ServletRequest: java.lang.String remoteHost]"
						AccessPathTypes="[java.lang.String]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.String getRemotePort()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						AccessPath="[javax.servlet.ServletRequest: int remotePort]"
						AccessPathTypes="[int]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.String getScheme()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						AccessPath="[javax.servlet.ServletRequest: java.lang.String scheme]"
						AccessPathTypes="[java.lang.String]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.String getServerName()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						AccessPath="[javax.servlet.ServletRequest: java.lang.String serverName]"
						AccessPathTypes="[java.lang.String]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.String getServerPort()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						AccessPath="[javax.servlet.ServletRequest: int serverPort]"
						AccessPathTypes="[int]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
	</methods>
</summary>